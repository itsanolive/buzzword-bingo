{"version":3,"sources":["../ /^/.//.*/.svg$/ groupOptions: {} namespace object","buzzwords.js","components/BingoGridItem.js","components/BingoGrid.js","components/Icon.js","components/LinkExternal.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","buzzwordList","BingoGridItem","props","state","active","initActive","toggleActive","bind","key","this","currentState","setState","onClick","classNames","className","data-active-cell","buzzword","Component","BingoGrid","checkBingo","returnBingo","bingo","bingoBgClasses","document","getElementById","classList","hasBingo","i","length","every","val","activeCells","indexOf","add","vertBingo","position","push","horBingo","some","element","diagBingo","bingoCell","querySelectorAll","forEach","item","index","getAttribute","currentPos","renderGrid","temporaryValue","randomIndex","bingoBoard","buzzwords","currentIndex","Math","floor","random","splice","value","uuidv4","Icon","name","ImportedIconRef","useRef","useState","loading","setLoading","useEffect","a","current","default","importIcon","ImportedIcon","LinkExternal","target","rel","href","aria-label","label","icon","iconClassName","children","App","slice","year","Date","getFullYear","Helmet","charSet","content","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe166f26.chunk.js","sourcesContent":["var map = {\n\t\"./github.svg\": [\n\t\t31,\n\t\t3\n\t],\n\t\"./moon.svg\": [\n\t\t32,\n\t\t4\n\t],\n\t\"./nodejs.svg\": [\n\t\t33,\n\t\t5\n\t],\n\t\"./npm.svg\": [\n\t\t34,\n\t\t6\n\t],\n\t\"./react.svg\": [\n\t\t35,\n\t\t7\n\t],\n\t\"./sun.svg\": [\n\t\t36,\n\t\t8\n\t],\n\t\"./tailwindcss.svg\": [\n\t\t37,\n\t\t9\n\t],\n\t\"./toggle-left.svg\": [\n\t\t38,\n\t\t10\n\t],\n\t\"./toggle-right.svg\": [\n\t\t39,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 29;\nmodule.exports = webpackAsyncContext;","export const buzzwordList = [\n    {\n        \"value\": \"Ownership\",\n        \"id\": \"ownership\"\n    },\n    {\n        \"value\": \"Take This Offline\",\n        \"id\": \"takethisoffline\"\n    },\n    {\n        \"value\": \"Out Of Scope\",\n        \"id\": \"outofscope\"\n    },\n    {\n        \"value\": \"Sidebar\",\n        \"id\": \"sidebar\"\n    },\n    {\n        \"value\": \"Risk\",\n        \"id\": \"risk\"\n    },\n    {\n        \"value\": \"At The End Of The Day\",\n        \"id\": \"attheendoftheday\"\n    },\n    {\n        \"value\": \"Fast And Furious\",\n        \"id\": \"fastandfurious\"\n    },\n    {\n        \"value\": \"Issue Tracker\",\n        \"id\": \"issuetracker\"\n    },\n    {\n        \"value\": \"Next Steps\",\n        \"id\": \"nextsteps\"\n    },\n    {\n        \"value\": \"Work In Progress\",\n        \"id\": \"workinprogress\"\n    },\n    {\n        \"value\": \"Open Items\",\n        \"id\": \"openitems\"\n    },\n    {\n        \"value\": \"Smoke And Mirrors\",\n        \"id\": \"smokeandmirrors\"\n    },\n    {\n        \"value\": \"Larger Conversation\",\n        \"id\": \"largerconversation\"\n    },\n    {\n        \"value\": \"Lift And Shift\",\n        \"id\": \"liftandshift\"\n    },\n    {\n        \"value\": \"Touch Base\",\n        \"id\": \"touchbase\"\n    },\n    {\n        \"value\": \"Re-Invent The Wheel\",\n        \"id\": \"re-inventthewheel\"\n    },\n    {\n        \"value\": \"Close To Time\",\n        \"id\": \"closetotime\"\n    },\n    {\n        \"value\": \"Timeline\",\n        \"id\": \"timeline\"\n    },\n    {\n        \"value\": \"Dependencies\",\n        \"id\": \"dependencies\"\n    },\n    {\n        \"value\": \"Close The Loop\",\n        \"id\": \"closetheloop\"\n    },\n    {\n        \"value\": \"Out Of The Box\",\n        \"id\": \"outofthebox\"\n    },\n    {\n        \"value\": \"Agile\",\n        \"id\": \"agile\"\n    },\n    {\n        \"value\": \"Deliverables\",\n        \"id\": \"deliverables\"\n    },\n    {\n        \"value\": \"Roadmap\",\n        \"id\": \"roadmap\"\n    },\n    {\n        \"value\": \"Moving Parts\",\n        \"id\": \"movingparts\"\n    },\n    {\n        \"value\": \"Feedback\",\n        \"id\": \"feedback\"\n    },\n    {\n        \"value\": \"Circle Back\",\n        \"id\": \"circleback\"\n    },\n    {\n        \"value\": \"Pushback\",\n        \"id\": \"pushback\"\n    },\n    {\n        \"value\": \"Deep Dive\",\n        \"id\": \"deepdive\"\n    },\n    {\n        \"value\": \"Customer Journey\",\n        \"id\": \"customerjourney\"\n    },\n    {\n        \"value\": \"Leverage\",\n        \"id\": \"leverage\"\n    },\n    {\n        \"value\": \"Level Of Effort\",\n        \"id\": \"levelofeffort\"\n    },\n    {\n        \"value\": \"Looped In\",\n        \"id\": \"loopedin\"\n    },\n    {\n        \"value\": \"Heads Down\",\n        \"id\": \"headsdown\"\n    },\n    {\n        \"value\": \"Fast Follow\",\n        \"id\": \"fastfollow\"\n    },\n    {\n        \"value\": \"In My Old Life\",\n        \"id\": \"inmyoldlife\"\n    },\n    {\n        \"value\": \"Radar\",\n        \"id\": \"radar\"\n    },\n    {\n        \"value\": \"Alignment\",\n        \"id\": \"alignment\"\n    },\n    {\n        \"value\": \"Path Forward\",\n        \"id\": \"pathforward\"\n    },\n    {\n        \"value\": \"Guardrails\",\n        \"id\": \"guardrails\"\n    },\n    {\n        \"value\": \"Phase\",\n        \"id\": \"phase\"\n    },\n    {\n        \"value\": \"Step Back\",\n        \"id\": \"stepback\"\n    }\n]\n","import React, { Component } from 'react'\n\nclass BingoGridItem extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            active: this.initActive(this.props.id)\n        }\n        this.toggleActive = this.toggleActive.bind(this)\n    }\n\n    initActive(key) {\n        if (key === 'free') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // * original toggleActive function\n    // toggleActive() {\n    //     if (this.props.id !== 'free') {\n    //         const currentState = this.state.active\n    //         this.setState({ active: !currentState })\n    //     }\n    // }\n\n    // * test toggleActive with callback function\n    toggleActive() {\n        if (this.props.id !== 'free') {\n            const currentState = this.state.active\n            this.setState({ active: !currentState }, () => {\n                if (this.props.onClick) {\n                    this.props.onClick(this);\n                }\n            })\n        }\n    }\n\n    render() {\n        let defaultStyles = 'BingoGridItem p-1 sm:p-2 rounded border-2 border-gray-900 dark:border-white text-center md:font-bold break-normal text-xs md:text-lg '\n        let activeStyles = 'bg-gray-900 text-green-300 border-green-300 dark:bg-green-300 dark:text-gray-800 shadow-lg'\n        let inactiveStyles = 'text-gray-900 dark:text-white'\n        let classNames = defaultStyles + (this.state.active ? activeStyles : inactiveStyles)\n\n        return (\n            <div\n                id={this.props.id}\n                onClick={this.toggleActive}\n                className={classNames}\n                data-active-cell={this.state.active} >\n                {this.props.buzzword}\n            </div>\n        )\n    }\n}\n\nexport default BingoGridItem\n","import React, { Component } from 'react'\nimport BingoGridItem from './BingoGridItem.js'\nimport { v4 as uuidv4 } from 'uuid';\n\nclass BingoGrid extends Component {\n    constructor(props) {\n        super(props)\n        this.renderGrid = this.renderGrid.bind(this)\n        // this.checkBingo = this.checkBingo.bind(this)\n    }\n\n    // TODO: use a different method to update buzzword array state\n\n    // TODO: use a separate method to add free space to the grid - if there's a way to insert it without adding to the array, that'd be great\n\n    // * if user gets bingo, do something\n    checkBingo = () => {\n        const returnBingo = (bingo) => {\n            let bingoBg = document.getElementById('bingo-container')\n            let bingoBgClasses = bingoBg.classList\n            let hasBingo = false\n            for (let i = 0; i < bingoBgClasses.length; i++) {\n                const bingoBgClass = bingoBgClasses[i]\n                if (bingoBgClass === 'BingoSuccess') {\n                    hasBingo = true\n                }\n            }\n            // console.log(bingoBgClasses);\n            if (bingo.length === 0) {\n                return false\n            } else {\n                let isBingo = bingo.every((val) => {return activeCells.indexOf(val) >= 0})\n                if ( isBingo === true ) {\n                    // alert('You got bingo!');\n                    if (!hasBingo) {\n                        bingoBgClasses.add('BingoSuccess')\n                        // console.log('bingo');\n                    }\n                    return true\n                } else {\n                    if (hasBingo) {\n                        // bingoBgClasses.remove('BingoSuccess')\n                    }\n                    return false\n                }\n            }\n        }\n        const vertBingo = (position) => {\n            let bingo = []\n            for ( let i = 0; i < 5; i++ ) {\n                bingo.push(position)\n                position += 5\n            }\n            // console.log('vert', returnBingo(bingo));\n            returnBingo(bingo);\n        }\n        const horBingo = (position) => {\n            let bingo = []\n            // console.log('some check:', [0,5,10,15,20].some((element) => element === position));\n            if ( [0,5,10,15,20].some((element) => element === position) ) {\n                for ( let i = 0; i < 5; i++ )  {\n                    bingo.push(position)\n                    position += 1\n                }\n            }\n            // console.log('horBingo array:', bingo);\n            // console.log('hor', returnBingo(bingo));\n            returnBingo(bingo);\n        }\n        const diagBingo = (position) => {\n            let bingo = []\n            if ( position === 0 ) {\n                for (let i = 0; i < 5; i++) {\n                    bingo.push(position)\n                    position += 6\n                }\n            } else if ( position === 4 ) {\n                for (let i = 0; i < 5; i++) {\n                    bingo.push(position)\n                    position += 4\n                }\n            }\n            // console.log('diag', returnBingo(bingo));\n            returnBingo(bingo);\n        }\n\n        let bingoCell = document.querySelectorAll('.BingoGridItem')\n        let activeCells = []\n        bingoCell.forEach(function(item, index) {\n            let active = item.getAttribute('data-active-cell')\n            if (active === 'true') {\n                activeCells.push(index)\n            }\n        })\n\n        // console.log(activeCells);\n\n        if (activeCells.length > 4) {\n           for (let i = 0; i < activeCells.length; i++) {\n                let currentPos = activeCells[i]\n                vertBingo(currentPos)\n                horBingo(currentPos)\n                diagBingo(currentPos)\n           }\n        }\n    }\n\n    renderGrid() {\n        // const bingoBoard = this.state.buzzwords\n        // console.log('pre-splice', this.props.buzzwords);\n\n        // ? Shuffle order of buzzwords on render\n        var bingoBoard = this.props.buzzwords\n        var currentIndex = bingoBoard.length,\n            temporaryValue,\n            randomIndex\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(\n                Math.random() * currentIndex,\n            )\n            currentIndex -= 1\n            // console.log(array, currentIndex)\n\n            // And swap it with the current element.\n            temporaryValue = bingoBoard[currentIndex]\n            bingoBoard[currentIndex] = bingoBoard[randomIndex]\n            bingoBoard[randomIndex] = temporaryValue\n        }\n\n        // * insert \"free\" into the array at index 12\n        // TODO - FIGURE OUT WHY THIS ITEM IS DUPLICATED IN THE ARRAY BUT ONLY MAPPING ONE COMPONENT\n        this.props.buzzwords.splice(12, 1, {value: 'FREE', id: 'free'})\n        // console.log('post-splice', this.props.buzzwords);\n\n        return this.props.buzzwords.map(\n            (item) => <BingoGridItem key={item.id + '-' + uuidv4()} id={item.id} buzzword={item.value} onClick={this.checkBingo} />\n        )\n    }\n\n    // shuffle() {\n    //     console.log(this.state.buzzwords)\n    //     this.setState(function(state) {\n    //         // console.log(state.buzzwords);\n    //         state.buzzwords.splice(12, 1)\n    //         var array = state.buzzwords\n    //         console.log('after splice', array);\n    //         console.log('after splice', state.buzzwords);\n\n    //         var currentIndex = this.state.buzzwords.length,\n    //             temporaryValue,\n    //             randomIndex\n\n    //         // While there remain elements to shuffle...\n    //         while (0 !== currentIndex) {\n    //             // Pick a remaining element...\n    //             randomIndex = Math.floor(\n    //                 Math.random() * currentIndex,\n    //             )\n    //             currentIndex -= 1\n    //             // console.log(array, currentIndex)\n\n    //             // And swap it with the current element.\n    //             temporaryValue = array[currentIndex]\n    //             array[currentIndex] = array[randomIndex]\n    //             array[randomIndex] = temporaryValue\n    //         }\n    //         return {\n    //             buzzwords: array\n    //         }\n    //     })\n    // }\n\n    render() {\n        return (\n            <div className=\"grid grid-cols-5 gap-1 sm:gap-2 my-4\">\n                {this.renderGrid()}\n            </div>\n        )\n    }\n}\n\nexport default BingoGrid\n","import React, { useState, useEffect, useRef } from 'react';\n\n// * from https://stackoverflow.com/questions/61339259/how-to-dynamically-import-svg-and-render-it-inline/61472427#61472427\nconst Icon = ({ name, ...props }) => {\n  const ImportedIconRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async () => {\n      try {\n        ImportedIconRef.current = (await import(`!!@svgr/webpack?-svgo,+titleProp,+ref!../icons/${name}.svg`)).default;\n      } catch (err) {\n        throw err;\n      } finally {\n        setLoading(false);\n        // console.log(ImportedIconRef);\n      }\n    };\n    importIcon();\n  }, [name]);\n\n  if (!loading && ImportedIconRef.current) {\n    const { current: ImportedIcon } = ImportedIconRef;\n    // console.log(ImportedIcon);\n    return (\n        <ImportedIcon {...props} />\n    )\n  }\n\n  return null;\n};\n\nexport default Icon;\n","// import React, { useState, useEffect, useRef } from 'react';\nimport Icon from './Icon'\n\n// * from https://stackoverflow.com/questions/61339259/how-to-dynamically-import-svg-and-render-it-inline/61472427#61472427\nconst LinkExternal = (props) => {\n    return (\n        <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={props.href}\n            aria-label={props.label} className=\"flex\">\n            {props.icon ?\n                <Icon name={props.icon} className={props.iconClassName} />\n            :\n            props.children ? props.children : null}\n        </a>\n    )\n};\n\nexport default LinkExternal;\n","import './App.css'\nimport { buzzwordList } from './buzzwords'\nimport { Helmet } from 'react-helmet'\n// import DarkModeToggle from './components/DarkModeToggle'\nimport BingoGrid from './components/BingoGrid'\nimport LinkExternal from './components/LinkExternal'\n\nfunction App() {\n\n  // * dark mode toggle\n  // function darkToggle() {\n\n  // }\n\n  // TODO: RENDER FULL BUZZWORDS BANK\n\n  // TODO: FILTER TO 24 FOR BINGO BOARD CARDS, SAVE TO BROWSER STORAGE WITH SIDE EFFECT\n  const bingoBoard = buzzwordList.slice(0, 25)\n  // console.log(bingoBoard);\n\n  // TODO: SERVE SHUFFLED ARRAY BACK TO BingoGrid AND SAVE TO BROWSER STORAGE AGAIN\n  // function shuffleClick() {\n  //   console.log('click');\n  //   var currentIndex = bingoBoard.length,\n  //     temporaryValue,\n  //     randomIndex\n\n  //   // While there remain elements to shuffle...\n  //   while (0 !== currentIndex) {\n  //     // Pick a remaining element...\n  //     randomIndex = Math.floor(\n  //       Math.random() * currentIndex,\n  //     )\n  //     currentIndex -= 1\n  //     // console.log(array, currentIndex)\n\n  //     // And swap it with the current element.\n  //     temporaryValue = bingoBoard[currentIndex]\n  //     bingoBoard[currentIndex] = bingoBoard[randomIndex]\n  //     bingoBoard[randomIndex] = temporaryValue\n  //   }\n  // }\n\n  var today = new Date();\n  var year = today.getFullYear();\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\"/>\n        <title>Buzzword Bingo</title>\n        <meta name=\"description\" content=\"Track business buzzwords and win back some sanity during meetings\"/>\n\n      </Helmet>\n      <main className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <header className=\"Header flex w-full bg-green-300 py-4 px-2 shadow-md border-gray-900\">\n          <div className=\"container flex mx-auto\">\n            <div className=\"w-1/4\">\n              {/* <DarkModeToggle></DarkModeToggle> */}\n            </div>\n            <div className=\"w-1/2\">\n              <h1 className=\"text-center text-3xl text-gray-900 font-bold uppercase\">Buzzword Bingo!</h1>\n            </div>\n            <div className=\"w-1/4 Nav__right\">\n              <LinkExternal\n                label=\"Github\"\n                icon=\"github\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/itsanolive/buzzword-bingo\"\n                className=\"text-gray-900 text-lg rounded p-1 hover:text-green-300 hover:bg-gray-900\">\n              </LinkExternal>\n              {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/itsanolive/buzzword-bingo\" className=\"text-gray-900 text-lg rounded p-1 hover:text-green-300 hover:bg-gray-900\"><FaGithub /></a> */}\n            </div>\n          </div>\n        </header>\n        <div id=\"bingo-container\" className=\"w-full p-1 md:p-2\">\n          <section id=\"bingo\" className=\"container max-w-screen-md p-1 md:p-2 mx-auto\">\n            <BingoGrid buzzwords={bingoBoard} />\n            <button className=\"rounded p-4 bg-green-300 text-gray-900 text-lg font-bold disabled:opacity-50\" onClick={refreshPage}>Reset & Shuffle</button>\n          </section>\n        </div>\n        <footer className=\"bg-gray-900 text-green-300\">\n          <div className=\"container flex flex-col py-4 mx-auto text-center\">\n            <div className=\"Footer__BuiltWith sm:w-1/2 mx-auto my-6\">\n              <p className=\"pb-4\">Built with</p>\n              <div className=\"Footer__BuiltWith--IconContainer grid grid-cols-4 gap-2 text-2xl\">\n                <LinkExternal\n                  label=\"ReactJS\"\n                  iconClassName=\"Footer__BuiltWith--Icon pr-2\"\n                  icon=\"react\"\n                  href=\"https://reactjs.org/\">\n                </LinkExternal>\n                <LinkExternal\n                  label=\"TailwindCSS\"\n                  iconClassName=\"Footer__BuiltWith--Icon pr-2\"\n                  icon=\"tailwindcss\"\n                  href=\"https://tailwindcss.com/\">\n                </LinkExternal>\n                <LinkExternal\n                  label=\"NodeJS\"\n                  iconClassName=\"Footer__BuiltWith--Icon pr-2\"\n                  icon=\"nodejs\"\n                  href=\"https://nodejs.org/en/\">\n                </LinkExternal>\n                <LinkExternal\n                  label=\"NPM\"\n                  iconClassName=\"Footer__BuiltWith--Icon pr-2\"\n                  icon=\"npm\"\n                  href=\"https://www.npmjs.com/\">\n                </LinkExternal>\n\n                {/* <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://reactjs.org/\"\n                  aria-label=\"ReactJS\" className=\"flex\">\n                  <FaReact className=\"Footer__BuiltWith--Icon pr-2\" />\n                </a>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://tailwindcss.com/\"\n                  aria-label=\"TailwindCSS\"\n                  className=\"flex\">\n                  <SiTailwindcss className=\"Footer__BuiltWith--Icon pr-2\" />\n                </a>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://nodejs.org/en/\"\n                  aria-label=\"NodeJS\"\n                  className=\"flex\">\n                  <FaNode className=\"Footer__BuiltWith--Icon pr-2\" />\n                </a>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://www.npmjs.com/\"\n                  aria-label=\"NPM\"\n                  className=\"flex\">\n                  <SiNpm className=\"Footer__BuiltWith--Icon pr-2\" />\n                </a> */}\n              </div>\n            </div>\n            <p>&copy; Olivia Beaty, {year} </p>\n          </div>\n        </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}